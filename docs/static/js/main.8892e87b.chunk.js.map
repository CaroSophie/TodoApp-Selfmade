{"version":3,"sources":["Header.js","Input.js","Counter.js","Todo.js","Delete.js","Separator.js","Progressbar.js","Button.js","App.js","serviceWorker.js","Globalstyle.js","index.js"],"names":["Heading","styled","h1","withConfig","displayName","componentId","Header","react_default","a","createElement","Component","Writetodo","input","Input","handleKeyUp","event","target","key","_this","props","onEnter","value","focus","placeholder","onKeyUp","this","Counting","div","Counter","num","className","Lined","li","Todo","_this$props","text","toggle","done","onClick","Button","button","Delete","handleDelete","Delete_Button","Wrapper","h3","Line","width","Text","span","Separator","Progress","percentage","Progressbar","Togglebutton","state","isDefault","handleToggle","setState","defaultText","alternativeText","Styleinput","Showtodos","Breakline","hr","Footr","footer","App","todos","load","addTodo","id","uid","concat","Object","toConsumableArray","toggleDone","index","findIndex","todo","slice","objectSpread","deleteToDo","deleteTodos","renderSingleTodo","src_Todo","src_Delete","filter","item","map","length","t","save","src_Header","src_Input","src_Counter","counterTodo","src_Progressbar","determineProgress","src_Separator","renderTodoList","renderDoneList","src_Button","console","log","localStorage","setItem","JSON","stringify","parse","getItem","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","createGlobalStyle","_templateObject","ReactDOM","render","Fragment","src_App","Globalstyle","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8892e87b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Heading = styled.h1`\n  text-align: center;\n  color: lightgrey;\n  font-size: 2em;\n  letter-spacing: -1px;\n  border: 2px solid white;\n  font-weight: bold;\n  margin: 10px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`\n\nclass Header extends Component {\n  render() {\n    return <Heading>To do list</Heading>\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Writetodo = styled.input`\n  background-color: white;\n  font-size: 20px;\n  height: 100px;\n  width: 65%;\n  border-radius: 10px 10px 10px;\n  border: 2px solid grey;\n  margin-left: 10px;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nclass Input extends Component {\n  handleKeyUp = event => {\n    const input = event.target\n    if (event.key === 'Enter') {\n      this.props.onEnter(input.value)\n      input.value = ''\n      input.focus()\n    }\n  }\n  render() {\n    return (\n      <Writetodo placeholder=\"Add todo here ...\" onKeyUp={this.handleKeyUp} />\n    )\n  }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Counting = styled.div`\n  text-align: end;\n  color: lightgrey;\n  font-style: italic;\n  font-weight: bold;\n  font-size: 130%;\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  padding: 5px;\n`\n\nclass Counter extends Component {\n  render() {\n    const { num } = this.props\n    return <Counting className=\"Counter\">Checked: {num}</Counting>\n  }\n}\n\nexport default Counter\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Lined = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 10px;\n  &.toggle {\n    text-decoration: line-through;\n    color: black;\n  }\n`\n\nclass Todo extends Component {\n  render() {\n    const { text, toggle, done } = this.props\n    return (\n      <Lined onClick={toggle} className={done ? 'toggle' : ''}>\n        {text}\n      </Lined>\n    )\n  }\n}\n\nexport default Todo\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: grey;\n  color: white;\n  font-size: 1em;\n`\n\nclass Delete extends Component {\n  render() {\n    const { handleDelete } = this.props\n    return <Button onClick={handleDelete}>x</Button>\n  }\n}\n\nexport default Delete\n","import React, { Component } from 'react'\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.h3`\n  display: flex;\n  align-items: center;\n`\n\nconst Line = styled.div`\n  width: 100%;\n  margin: 0 10px;\n  border-bottom: ${props => props.width || 2}px solid black;\n`\n\nconst Text = styled.span`\n  white-space: no wrap;\n`\n\nclass Separator extends Component {\n  render() {\n    const { text } = this.props\n    return (\n      <Wrapper>\n        <Line width={2} />\n        <Text>{text}</Text>\n        <Line width={2} />\n      </Wrapper>\n    )\n  }\n}\n\nexport default Separator\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Progress = styled.div`\n  height: 20px;\n  background: lightgrey;\n  margin-top: 20px;\n  width: 100%;\n\n  &::after {\n    content: '';\n    display: block;\n    height: 20px;\n    margin-top: 20px;\n    width: ${props => props.percentage * 100}%;\n    background: grey;\n    transition: width 0.3s ease;\n  }\n`\nclass Progressbar extends Component {\n  render() {\n    return <Progress percentage={this.props.percentage} />\n  }\n}\n\nexport default Progressbar\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Togglebutton = styled.button`\n  width: 100px;\n  height: 40px;\n  background: whitesmoke;\n  color: black;\n  margin-top: 20px;\n  margin-bottom: 20px;\n\n  &:focus {\n    outline: none;\n  }\n\n  &.active {\n    background: linear-gradient(0.75turn, #e66465, #9198e5);\n    color: white;\n    font-size: 1em;\n  }\n`\n\nclass Button extends Component {\n  state = { isDefault: this.props.isDefault }\n\n  handleToggle = () => {\n    this.setState({\n      isDefault: !this.state.isDefault\n    })\n    this.props.onClick()\n  }\n\n  render() {\n    const { defaultText, alternativeText } = this.props\n    const { isDefault } = this.state\n    return (\n      <Togglebutton\n        className={isDefault ? '' : 'active'}\n        onClick={this.handleToggle}\n      >\n        {isDefault ? defaultText : alternativeText}\n      </Togglebutton>\n    )\n  }\n}\n\nexport default Button\n","import React, { Component } from 'react'\nimport uid from 'uid'\nimport Header from './Header'\nimport Input from './Input'\nimport Counter from './Counter'\nimport Todo from './Todo'\nimport Delete from './Delete'\nimport Separator from './Separator'\nimport Progressbar from './Progressbar'\nimport Button from './Button'\n\nimport styled from 'styled-components'\n\nconst Styleinput = styled.div`\n  display: flex;\n`\n\nconst Showtodos = styled.div`\n  display: grid;\n  grid-template-columns: 90fr 10fr;\n  grid-template-rows: auto;\n  grid-gap: 4em;\n  margin: 10px;\n  color: darkred;\n  font-weight: bold;\n  background: whitesmoke;\n  opacity: 0.8;\n  height: 40px;\n`\n\nconst Breakline = styled.hr`\n  margin-top: 20px;\n`\n\nconst Footr = styled.footer`\n  background: grey;\n  position: sticky;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nclass App extends Component {\n  state = {\n    todos: this.load()\n  }\n\n  addTodo = text => {\n    this.setState({\n      todos: [{ text, done: false, id: uid() }, ...this.state.todos]\n    })\n  }\n\n  toggleDone = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const toggleDone = [\n      ...todos.slice(0, index),\n      { ...todos[index], done: !todos[index].done },\n      ...todos.slice(index + 1)\n    ]\n\n    this.setState({\n      todos: toggleDone\n    })\n  }\n\n  deleteToDo = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const deleteTodos = [...todos.slice(0, index), ...todos.slice(index + 1)]\n\n    this.setState({\n      todos: deleteTodos\n    })\n  }\n\n  renderTodoList() {\n    return this.state.todos\n      .filter(item => !item.done)\n      .map(this.renderSingleTodo)\n  }\n\n  renderDoneList() {\n    return this.state.todos.filter(item => item.done).map(this.renderSingleTodo)\n  }\n\n  renderSingleTodo = todo => (\n    <Showtodos key={todo.id}>\n      <Todo\n        key={todo.id}\n        text={todo.text}\n        toggle={() => this.toggleDone(todo.id)}\n        done={todo.done}\n      />\n      <Delete handleDelete={() => this.deleteToDo(todo.id)} />\n    </Showtodos>\n  )\n\n  counterTodo() {\n    return this.state.todos.filter(item => item.done).length\n  }\n\n  determineProgress() {\n    const { todos } = this.state\n    const doneTodos = todos.filter(t => t.done)\n    return doneTodos.length / todos.length\n  }\n\n  render() {\n    this.save()\n\n    return (\n      <div>\n        <Header />\n        <Styleinput>\n          <Input onEnter={this.addTodo} />\n          <Counter num={this.counterTodo()} />\n        </Styleinput>\n        <Progressbar percentage={this.determineProgress()} />\n        <Separator text=\"TODO\" />\n        {this.renderTodoList()}\n        <Separator text=\"DONE\" />\n        {this.renderDoneList()}\n        <Breakline />\n        <Footr>\n          <Button\n            defaultText={'HAHAHAHA verarscht'}\n            alternativeText={'Click here'}\n            onClick={() => console.log('click')}\n          />\n        </Footr>\n      </div>\n    )\n  }\n\n  save() {\n    localStorage.setItem('todo-app--todos', JSON.stringify(this.state.todos))\n  }\n\n  load() {\n    try {\n      return JSON.parse(localStorage.getItem('todo-app--todos')) || []\n    } catch (err) {\n      return []\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\nbody {\n  background: linear-gradient(0.75turn, #e66465, #9198e5);\n  margin: 0px; \n}`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport Globalstyle from './Globalstyle'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <Globalstyle />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}